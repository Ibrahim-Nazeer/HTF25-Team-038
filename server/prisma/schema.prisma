generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  INTERVIEWER
  CANDIDATE
}

enum SessionStatus {
  ACTIVE
  COMPLETED
  CANCELLED
}

model User {
  id                  String             @id @default(cuid())
  email               String             @unique
  name                String?
  role                UserRole
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @default(now()) @updatedAt
  
  // Profile fields
  organization        String?
  jobRole             String?
  phoneNumber         String?
  bio                 String?
  linkedinUrl         String?
  githubUrl           String?
  location            String?
  
  interviewerSessions InterviewSession[] @relation("InterviewerSessions")
  candidateSessions   InterviewSession[] @relation("CandidateSessions")
}

model Problem {
  id              String             @id @default(cuid())
  title           String
  description     String
  difficulty      String
  category        String?            // Array, String, Tree, Graph, etc.
  starterCode     Json?              // Language-specific starter code { javascript: "...", python: "...", etc. }
  testCases       Json?              // Array of test cases with input/output
  functionName    String?            // Main function name for testing
  createdAt       DateTime           @default(now())
  sessions        InterviewSession[]
}

model InterviewSession {
  id            String        @id @default(cuid())
  title         String
  interviewerId String
  candidateId   String?
  problemId     String?
  timerDuration Int?
  dailyRoomUrl  String?
  status        SessionStatus @default(ACTIVE)
  createdAt     DateTime      @default(now())
  endedAt       DateTime?
  interviewer   User          @relation("InterviewerSessions", fields: [interviewerId], references: [id])
  candidate     User?         @relation("CandidateSessions", fields: [candidateId], references: [id])
  problem       Problem?      @relation(fields: [problemId], references: [id])
}